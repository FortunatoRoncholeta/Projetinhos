unit RenomearArquivo;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls,
  System.IOUtils, System.Types, Vcl.FileCtrl;

type
  TF_RenomearArquivo = class(TForm)
    Panel1: TPanel;
    Ed_Caminho: TEdit;
    Cbo_Tipo: TComboBox;
    Bt_RenomeaArquivo: TSpeedButton;
    Bt_Desfazer: TSpeedButton;
    Bt_Limpar: TSpeedButton;
    Ed_NomeArquivo: TEdit;
    Ed_NovoNomeArquivo: TEdit;
    ListBox1: TListBox;
    Bt_Carregar: TSpeedButton;
    procedure Bt_CarregarClick(Sender: TObject);
    procedure Bt_LimparClick(Sender: TObject);
    procedure Bt_RenomeaArquivoClick(Sender: TObject);


  private


  public
  procedure CarregarArquivos(const Pasta: string);
  procedure RenomearArquivos;

  end;

var
  F_RenomearArquivo: TF_RenomearArquivo;

implementation

{$R *.dfm}

uses
  System.StrUtils;




  // Funçoes

procedure TF_RenomearArquivo.CarregarArquivos(const Pasta: string);
const
   ExtensoesSuportadas: array[0..6] of string = ('.jpg', '.jpeg', '.png', '.mp4', '.avi', '.mov', '.mkv');
var
   Arquivos: TStringDynArray;
   Arquivo: string;
   Ext: string;
begin
   ListBox1.Items.Clear;

   Arquivos := TDirectory.GetFiles(Pasta, '*.*', TSearchOption.soTopDirectoryOnly);
   for Arquivo in Arquivos do
   begin
      Ext := LowerCase(ExtractFileExt(Arquivo));
      if MatchText(Ext, ExtensoesSuportadas) then
         ListBox1.Items.Add(Arquivo);
   end;

   if ListBox1.Count = 0 then
      ShowMessage('Nenhum arquivo de imagem ou vídeo encontrado.');
end;



procedure TF_RenomearArquivo.RenomearArquivos;
var
  i: Integer;
  Arquivo, NomeOriginal, NomeFinal, Extensao: string;
  TextoRemover1, TextoRemover2, Caminho, NovoCaminho: string;
begin
  Caminho := Trim(Ed_Caminho.Text);
  if Caminho = '' then
  begin
    ShowMessage('Selecione uma pasta primeiro!');
    Exit;
  end;

  if ListBox1.Count = 0 then
  begin
    ShowMessage('Nenhum arquivo carregado!');
    Exit;
  end;

  TextoRemover1 := Trim(Ed_NomeArquivo.Text);
  TextoRemover2 := Trim(Ed_NovoNomeArquivo.Text);

  for i := 0 to ListBox1.Count - 1 do
  begin
    Arquivo := ListBox1.Items[i];
    NomeOriginal := TPath.GetFileNameWithoutExtension(Arquivo);
    Extensao := TPath.GetExtension(Arquivo);

    // Remove partes do nome
    if TextoRemover1 <> '' then
      NomeFinal := NomeOriginal.Replace(TextoRemover1, '', [rfIgnoreCase])
    else
      NomeFinal := NomeOriginal;

    if TextoRemover2 <> '' then
      NomeFinal := NomeFinal.Replace(TextoRemover2, '', [rfIgnoreCase]);

    NomeFinal := Trim(NomeFinal);

    // Evita sobrescrever se já existir
    NovoCaminho := TPath.Combine(Caminho, NomeFinal + Extensao);
    if TFile.Exists(NovoCaminho) then
    begin
      ShowMessage('Já existe um arquivo com o nome: ' + NomeFinal + Extensao);
      Continue;
    end;

    // Renomeia o arquivo
    try
      TFile.Move(Arquivo, NovoCaminho);

      // Atualiza na ListBox o novo caminho
      ListBox1.Items[i] := NovoCaminho;
    except
      on E: Exception do
        ShowMessage('Erro ao renomear: ' + Arquivo + sLineBreak + E.Message);
    end;
  end;

  ShowMessage('Renomeação concluída!');
end;





   // ======Botoes=====

procedure TF_RenomearArquivo.Bt_CarregarClick(Sender: TObject);
var
   Pasta: string;
begin
   if SelectDirectory('Selecione a pasta com os arquivos', '', Pasta) then
   begin
      Ed_Caminho.Text := Pasta;
      CarregarArquivos(Pasta);
   end;
end;


  procedure TF_RenomearArquivo.Bt_LimparClick(Sender: TObject);
begin

   Ed_Caminho.Text         := '';
   Ed_NomeArquivo.Text     := '';
   Ed_NovoNomeArquivo.Text := '';


end;



procedure TF_RenomearArquivo.Bt_RenomeaArquivoClick(Sender: TObject);
begin
  RenomearArquivos;
end;

end.
